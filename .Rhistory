non_matched_left <- rbind(non_matched_left, temp_non_matched_left)
non_matched_right <- rbind(non_matched_right, temp_non_matched_right)
duplicates_right <- rbind(duplicates_right, temp_duplicates_right)
duplicates_left <- rbind(duplicates_left, temp_duplicates_left)
}
else {
print(st)
}
}
all_objects_to_return <- list(cw, non_matched_left, non_matched_right, duplicates_left, duplicates_right )
return(all_objects_to_return)
}
# 2010 - 2013 : not amazing 60% 2010 but 25% 2013
temp_object = make_crosswalk(pub_2010, pub_2013)
cw_2010_2013 = data.table(data.frame(temp_object[1]))
non_matched_2010_2013 = data.table(data.frame(temp_object[2]))
non_matched_2013_2010 = data.table(data.frame(temp_object[3]))
duplicates_2010 = data.table(data.frame(temp_object[4]))
duplicates_2013 = data.table(data.frame(temp_object[5]))
# 2013 - 2014
## (careful because this erases some database from above)
temp_object = make_crosswalk(pub_2014, pub_2013)
cw_2014_2013 = data.table(data.frame(temp_object[1]))
non_matched_2014_2013 = data.table(data.frame(temp_object[2]))
non_matched_2013_2014 = data.table(data.frame(temp_object[3]))
duplicates_2014 = data.table(data.frame(temp_object[4]))
duplicates_2013 = data.table(data.frame(temp_object[5]))
#all_duplicates = rbind(duplicates_right, duplicates_left)
colnames(cw_2010_2013) <- c("newspaper_clean_13", "newspaper_clean_10", "newspaper_10", "newspaper_st_10", "newspaper_13", "newspaper_st_13" )
# add NA to our list of states
states_with_NN = states
states_with_NN[52]="NN"
make_crosswalk <- function(data_left, data_right){
cw <- data.table()
non_matched_left <- data.table()
duplicates_left <- data.table()
non_matched_right <- data.table()
duplicates_right <- data.table()
for (st in unique(data_left$newspaper_state)){
if (st %in% states_with_NN){
temp = data_left[newspaper_state == st]
temp <- data.table(temp)
temp_right = data_right[newspaper_state == st]
temp_cw <- stringdist_join(temp,
temp_right,
by = "newspaper_clean",
method = "qgram",
distance_col = "dist",
max_dist= 5)
temp_cw <- data.table(temp_cw)
temp_cw <- temp_cw[ , .SD[which.min(dist)], by = newspaper_clean.x]
temp_cw <- temp_cw[ , .SD[which.min(dist)], by = newspaper_clean.y]
temp_cw[, dist :=  NULL]
# for left
temp_non_matched_left <- temp[newspaper_clean %!in% temp_cw$newspaper_clean.x]
temp_duplicates_left <- temp[duplicated(newspaper_clean)]
# for right
temp_non_matched_right <- temp_right[newspaper_clean %!in% temp_cw$newspaper_clean.y]
temp_duplicates_right <- temp_right[duplicated(newspaper_clean)]
# check we have everyone on board
### should check why do we need <=
assert(dim(temp)[1]<=dim(temp_cw)[1]+dim(temp_non_matched_left)[1]+dim(temp_duplicates_left)[1])
assert(dim(temp_right)[1]<=dim(temp_cw)[1]+dim(temp_non_matched_right)[1]+dim(temp_duplicates_right)[1])
# now combine with the others
cw <- rbind(cw, temp_cw)
non_matched_left <- rbind(non_matched_left, temp_non_matched_left)
non_matched_right <- rbind(non_matched_right, temp_non_matched_right)
duplicates_right <- rbind(duplicates_right, temp_duplicates_right)
duplicates_left <- rbind(duplicates_left, temp_duplicates_left)
}
else {
print(st)
}
}
all_objects_to_return <- list(cw, non_matched_left, non_matched_right, duplicates_left, duplicates_right )
return(all_objects_to_return)
}
# 2010 - 2013 : not amazing 60% 2010 but 25% 2013
temp_objectl = make_crosswalk(pub_2010, pub_2013)
cw_2010_2013l = data.table(data.frame(temp_object[1]))
non_matched_2010_2013l = data.table(data.frame(temp_object[2]))
non_matched_2013_2010l = data.table(data.frame(temp_object[3]))
duplicates_2010l = data.table(data.frame(temp_object[4]))
duplicates_2013l = data.table(data.frame(temp_object[5]))
# 2013 - 2014
## (careful because this erases some database from above)
temp_objectl = make_crosswalk(pub_2014, pub_2013)
cw_2014_2013l = data.table(data.frame(temp_object[1]))
non_matched_2014_2013l = data.table(data.frame(temp_object[2]))
non_matched_2013_2014l = data.table(data.frame(temp_object[3]))
duplicates_2014l = data.table(data.frame(temp_object[4]))
duplicates_2013l = data.table(data.frame(temp_object[5]))
#all_duplicates = rbind(duplicates_right, duplicates_left)
colnames(cw_2010_2013) <- c("newspaper_clean_13", "newspaper_clean_10", "newspaper_10", "newspaper_st_10", "newspaper_13", "newspaper_st_13" )
# add NA to our list of states
states_with_NN = states
states_with_NN[52]="NN"
make_crosswalk <- function(data_left, data_right){
cw <- data.table()
non_matched_left <- data.table()
duplicates_left <- data.table()
non_matched_right <- data.table()
duplicates_right <- data.table()
for (st in unique(data_left$newspaper_state)){
if (st %in% states_with_NN){
temp = data_left[newspaper_state == st]
temp <- data.table(temp)
temp_right = data_right[newspaper_state == st]
temp_cw <- stringdist_join(temp,
temp_right,
by = "newspaper_clean",
method = "qgram",
distance_col = "dist",
max_dist= 5)
temp_cw <- data.table(temp_cw)
temp_cw <- temp_cw[ , .SD[which.min(dist)], by = newspaper_clean.x]
temp_cw <- temp_cw[ , .SD[which.min(dist)], by = newspaper_clean.y]
temp_cw[, dist :=  NULL]
# for left
temp_non_matched_left <- temp[newspaper_clean %!in% temp_cw$newspaper_clean.x]
temp_duplicates_left <- temp[duplicated(newspaper_clean)]
# for right
temp_non_matched_right <- temp_right[newspaper_clean %!in% temp_cw$newspaper_clean.y]
temp_duplicates_right <- temp_right[duplicated(newspaper_clean)]
# check we have everyone on board
### should check why do we need <=
assert(dim(temp)[1]<=dim(temp_cw)[1]+dim(temp_non_matched_left)[1]+dim(temp_duplicates_left)[1])
assert(dim(temp_right)[1]<=dim(temp_cw)[1]+dim(temp_non_matched_right)[1]+dim(temp_duplicates_right)[1])
# now combine with the others
cw <- rbind(cw, temp_cw)
non_matched_left <- rbind(non_matched_left, temp_non_matched_left)
non_matched_right <- rbind(non_matched_right, temp_non_matched_right)
duplicates_right <- rbind(duplicates_right, temp_duplicates_right)
duplicates_left <- rbind(duplicates_left, temp_duplicates_left)
}
else {
print(st)
}
}
all_objects_to_return <- list(cw, non_matched_left, non_matched_right, duplicates_left, duplicates_right )
return(all_objects_to_return)
}
# 2010 - 2013 : not amazing 60% 2010 but 25% 2013
temp_object = make_crosswalk(pub_2010, pub_2013)
cw_2010_2013l = data.table(data.frame(temp_object[1]))
non_matched_2010_2013l = data.table(data.frame(temp_object[2]))
non_matched_2013_2010l = data.table(data.frame(temp_object[3]))
duplicates_2010l = data.table(data.frame(temp_object[4]))
duplicates_2013l = data.table(data.frame(temp_object[5]))
# 2013 - 2014
## (careful because this erases some database from above)
temp_object = make_crosswalk(pub_2014, pub_2013)
cw_2014_2013l = data.table(data.frame(temp_object[1]))
non_matched_2014_2013l = data.table(data.frame(temp_object[2]))
non_matched_2013_2014l = data.table(data.frame(temp_object[3]))
duplicates_2014l = data.table(data.frame(temp_object[4]))
duplicates_2013l = data.table(data.frame(temp_object[5]))
#all_duplicates = rbind(duplicates_right, duplicates_left)
colnames(cw_2010_2013) <- c("newspaper_clean_13", "newspaper_clean_10", "newspaper_10", "newspaper_st_10", "newspaper_13", "newspaper_st_13" )
diff = setdiff(non_matched_2013_2014l$newspapers, non_matched_2013_2014$newspapers) # elements in 1 not in 2
diff = setdiff(non_matched_2013_2014$newspapers, non_matched_2013_2014l$newspapers) # elements in 1 not in 2
View(non_matched_2013_2014l)
View(non_matched_2013_2014)
View(cw_2014_2013l)
# add NA to our list of states
states_with_NN = states
states_with_NN[52]="NN"
make_crosswalk <- function(data_left, data_right){
cw <- data.table()
non_matched_left <- data.table()
duplicates_left <- data.table()
non_matched_right <- data.table()
duplicates_right <- data.table()
for (st in unique(data_left$newspaper_state)){
if (st %in% states_with_NN){
temp = data_left[newspaper_state == st]
temp <- data.table(temp)
temp_right = data_right[newspaper_state == st]
temp_cw <- stringdist_join(temp,
temp_right,
by = "newspaper_clean",
method = "lcs",
distance_col = "dist",
max_dist= 5)
temp_cw <- data.table(temp_cw)
temp_cw <- temp_cw[ , .SD[which.min(dist)], by = newspaper_clean.x]
temp_cw <- temp_cw[ , .SD[which.min(dist)], by = newspaper_clean.y]
temp_cw[, dist :=  NULL]
# for left
temp_non_matched_left <- temp[newspaper_clean %!in% temp_cw$newspaper_clean.x]
temp_duplicates_left <- temp[duplicated(newspaper_clean)]
# for right
temp_non_matched_right <- temp_right[newspaper_clean %!in% temp_cw$newspaper_clean.y]
temp_duplicates_right <- temp_right[duplicated(newspaper_clean)]
# check we have everyone on board
### should check why do we need <=
assert(dim(temp)[1]<=dim(temp_cw)[1]+dim(temp_non_matched_left)[1]+dim(temp_duplicates_left)[1])
assert(dim(temp_right)[1]<=dim(temp_cw)[1]+dim(temp_non_matched_right)[1]+dim(temp_duplicates_right)[1])
# now combine with the others
cw <- rbind(cw, temp_cw)
non_matched_left <- rbind(non_matched_left, temp_non_matched_left)
non_matched_right <- rbind(non_matched_right, temp_non_matched_right)
duplicates_right <- rbind(duplicates_right, temp_duplicates_right)
duplicates_left <- rbind(duplicates_left, temp_duplicates_left)
}
else {
print(st)
}
}
all_objects_to_return <- list(cw, non_matched_left, non_matched_right, duplicates_left, duplicates_right )
return(all_objects_to_return)
}
# 2010 - 2013 : not amazing 60% 2010 but 25% 2013
temp_object = make_crosswalk(pub_2010, pub_2013)
cw_2010_2013 = data.table(data.frame(temp_object[1]))
non_matched_2010_2013 = data.table(data.frame(temp_object[2]))
non_matched_2013_2010 = data.table(data.frame(temp_object[3]))
duplicates_2010 = data.table(data.frame(temp_object[4]))
duplicates_2013 = data.table(data.frame(temp_object[5]))
# 2013 - 2014
## (careful because this erases some database from above)
temp_object = make_crosswalk(pub_2014, pub_2013)
cw_2014_2013 = data.table(data.frame(temp_object[1]))
non_matched_2014_2013 = data.table(data.frame(temp_object[2]))
non_matched_2013_2014 = data.table(data.frame(temp_object[3]))
duplicates_2014 = data.table(data.frame(temp_object[4]))
duplicates_2013 = data.table(data.frame(temp_object[5]))
#all_duplicates = rbind(duplicates_right, duplicates_left)
colnames(cw_2010_2013) <- c("newspaper_clean_13", "newspaper_clean_10", "newspaper_10", "newspaper_st_10", "newspaper_13", "newspaper_st_13" )
View(non_matched_2014_2013)
View(non_matched_2013_2014)
non_matched_2014_2013[with(non_matched_2014_2013, order(c(newspaper_state, newspapers)))]
test =non_matched_2014_2013[with(non_matched_2014_2013, order(c(newspaper_state, newspapers)))]
View(test)
non_matched_2014_2013 =non_matched_2014_2013[with(non_matched_2014_2013, order(c(newspaper_state, newspapers)))]
non_matched_2014_2013 =non_matched_2014_2013[with(non_matched_2014_2013, order(c(newspaper_state, newspapers)))]
non_matched_2013_2014 =non_matched_2013_2014[with(non_matched_2013_2014, order(c(non_matched_2013_2014, newspapers)))]
non_matched_2014_2013 =non_matched_2014_2013[with(non_matched_2014_2013, order(c(newspaper_state, newspapers)))]
non_matched_2013_2014 =non_matched_2013_2014[with(non_matched_2013_2014, order(c(newspaper_state, newspapers)))]
#diff = setdiff(non_matched_2013_2014$newspapers, non_matched_2013_2014l$newspapers) # elements in 1 not in 2
View(non_matched_2014_2013)
View(non_matched_2013_2014)
na.omit(non_matched_2013_2010$newspapers)
non_matched_2014_2013  = na.omit(non_matched_2014_2013)
# add NA to our list of states
states_with_NN = states
states_with_NN[52]="NN"
make_crosswalk <- function(data_left, data_right){
cw <- data.table()
non_matched_left <- data.table()
duplicates_left <- data.table()
non_matched_right <- data.table()
duplicates_right <- data.table()
for (st in unique(data_left$newspaper_state)){
if (st %in% states_with_NN){
temp = data_left[newspaper_state == st]
temp <- data.table(temp)
temp_right = data_right[newspaper_state == st]
temp_cw <- stringdist_join(temp,
temp_right,
by = "newspaper_clean",
method = "lcs",
distance_col = "dist",
max_dist= 5)
temp_cw <- data.table(temp_cw)
temp_cw <- temp_cw[ , .SD[which.min(dist)], by = newspaper_clean.x]
temp_cw <- temp_cw[ , .SD[which.min(dist)], by = newspaper_clean.y]
temp_cw[, dist :=  NULL]
# for left
temp_non_matched_left <- temp[newspaper_clean %!in% temp_cw$newspaper_clean.x]
temp_duplicates_left <- temp[duplicated(newspaper_clean)]
# for right
temp_non_matched_right <- temp_right[newspaper_clean %!in% temp_cw$newspaper_clean.y]
temp_duplicates_right <- temp_right[duplicated(newspaper_clean)]
# check we have everyone on board
### should check why do we need <=
assert(dim(temp)[1]<=dim(temp_cw)[1]+dim(temp_non_matched_left)[1]+dim(temp_duplicates_left)[1])
assert(dim(temp_right)[1]<=dim(temp_cw)[1]+dim(temp_non_matched_right)[1]+dim(temp_duplicates_right)[1])
# now combine with the others
cw <- rbind(cw, temp_cw)
non_matched_left <- rbind(non_matched_left, temp_non_matched_left)
non_matched_right <- rbind(non_matched_right, temp_non_matched_right)
duplicates_right <- rbind(duplicates_right, temp_duplicates_right)
duplicates_left <- rbind(duplicates_left, temp_duplicates_left)
}
else {
print(st)
}
}
all_objects_to_return <- list(cw, non_matched_left, non_matched_right, duplicates_left, duplicates_right )
return(all_objects_to_return)
}
# 2010 - 2013 : not amazing 60% 2010 but 25% 2013
temp_object = make_crosswalk(pub_2010, pub_2013)
cw_2010_2013 = data.table(data.frame(temp_object[1]))
non_matched_2010_2013 = data.table(data.frame(temp_object[2]))
non_matched_2013_2010 = data.table(data.frame(temp_object[3]))
duplicates_2010 = data.table(data.frame(temp_object[4]))
duplicates_2013 = data.table(data.frame(temp_object[5]))
# 2013 - 2014
## (careful because this erases some database from above)
temp_object = make_crosswalk(pub_2014, pub_2013)
cw_2014_2013 = data.table(data.frame(temp_object[1]))
non_matched_2014_2013 = data.table(data.frame(temp_object[2]))
non_matched_2013_2014 = data.table(data.frame(temp_object[3]))
duplicates_2014 = data.table(data.frame(temp_object[4]))
duplicates_2013 = data.table(data.frame(temp_object[5]))
#all_duplicates = rbind(duplicates_right, duplicates_left)
colnames(cw_2010_2013) <- c("newspaper_clean_13", "newspaper_clean_10", "newspaper_10", "newspaper_st_10", "newspaper_13", "newspaper_st_13" )
non_matched_2014_2013 =non_matched_2014_2013[with(non_matched_2014_2013, order(c(newspaper_state, newspapers)))]
non_matched_2013_2014 =non_matched_2013_2014[with(non_matched_2013_2014, order(c(newspaper_state, newspapers)))]
# remove NAs
#non_matched_2014_2013  = na.omit(non_matched_2014_2013)
#diff = setdiff(non_matched_2013_2014$newspapers, non_matched_2013_2014l$newspapers) # elements in 1 not in 2
# add NA to our list of states
states_with_NN = states
states_with_NN[52]="NN"
make_crosswalk <- function(data_left, data_right){
cw <- data.table()
non_matched_left <- data.table()
duplicates_left <- data.table()
non_matched_right <- data.table()
duplicates_right <- data.table()
for (st in unique(data_left$newspaper_state)){
if (st %in% states_with_NN){
temp = data_left[newspaper_state == st]
temp <- data.table(temp)
temp_right = data_right[newspaper_state == st]
temp_cw <- stringdist_join(temp,
temp_right,
by = "newspaper_clean",
method = "lcs",
distance_col = "dist",
max_dist= 5)
temp_cw <- data.table(temp_cw)
temp_cw <- temp_cw[ , .SD[which.min(dist)], by = newspaper_clean.x]
temp_cw <- temp_cw[ , .SD[which.min(dist)], by = newspaper_clean.y]
temp_cw[, dist :=  NULL]
# for left
temp_non_matched_left <- temp[newspaper_clean %!in% temp_cw$newspaper_clean.x]
temp_duplicates_left <- temp[duplicated(newspaper_clean)]
# for right
temp_non_matched_right <- temp_right[newspaper_clean %!in% temp_cw$newspaper_clean.y]
temp_duplicates_right <- temp_right[duplicated(newspaper_clean)]
# check we have everyone on board
### should check why do we need <=
assert(dim(temp)[1]<=dim(temp_cw)[1]+dim(temp_non_matched_left)[1]+dim(temp_duplicates_left)[1])
assert(dim(temp_right)[1]<=dim(temp_cw)[1]+dim(temp_non_matched_right)[1]+dim(temp_duplicates_right)[1])
# now combine with the others
cw <- rbind(cw, temp_cw)
non_matched_left <- rbind(non_matched_left, temp_non_matched_left)
non_matched_right <- rbind(non_matched_right, temp_non_matched_right)
duplicates_right <- rbind(duplicates_right, temp_duplicates_right)
duplicates_left <- rbind(duplicates_left, temp_duplicates_left)
}
else {
print(st)
}
}
all_objects_to_return <- list(cw, non_matched_left, non_matched_right, duplicates_left, duplicates_right )
return(all_objects_to_return)
}
# 2010 - 2013 : not amazing 60% 2010 but 25% 2013
temp_object = make_crosswalk(pub_2010, pub_2013)
cw_2010_2013 = data.table(data.frame(temp_object[1]))
non_matched_2010_2013 = data.table(data.frame(temp_object[2]))
non_matched_2013_2010 = data.table(data.frame(temp_object[3]))
duplicates_2010 = data.table(data.frame(temp_object[4]))
duplicates_2013 = data.table(data.frame(temp_object[5]))
# 2013 - 2014
## (careful because this erases some database from above)
temp_object = make_crosswalk(pub_2014, pub_2013)
cw_2014_2013 = data.table(data.frame(temp_object[1]))
non_matched_2014_2013 = data.table(data.frame(temp_object[2]))
non_matched_2013_2014 = data.table(data.frame(temp_object[3]))
duplicates_2014 = data.table(data.frame(temp_object[4]))
duplicates_2013 = data.table(data.frame(temp_object[5]))
#all_duplicates = rbind(duplicates_right, duplicates_left)
colnames(cw_2010_2013) <- c("newspaper_clean_13", "newspaper_clean_10", "newspaper_10", "newspaper_st_10", "newspaper_13", "newspaper_st_13" )
non_matched_2014_2013 =non_matched_2014_2013[with(non_matched_2014_2013, order(c(newspaper_state, newspapers))),]
non_matched_2013_2014 =non_matched_2013_2014[with(non_matched_2013_2014, order(c(newspaper_state, newspapers))),]
# remove NAs
#non_matched_2014_2013  = na.omit(non_matched_2014_2013)
#diff = setdiff(non_matched_2013_2014$newspapers, non_matched_2013_2014l$newspapers) # elements in 1 not in 2
# add NA to our list of states
states_with_NN = states
states_with_NN[52]="NN"
make_crosswalk <- function(data_left, data_right){
cw <- data.table()
non_matched_left <- data.table()
duplicates_left <- data.table()
non_matched_right <- data.table()
duplicates_right <- data.table()
for (st in unique(data_left$newspaper_state)){
if (st %in% states_with_NN){
temp = data_left[newspaper_state == st]
temp <- data.table(temp)
temp_right = data_right[newspaper_state == st]
temp_cw <- stringdist_join(temp,
temp_right,
by = "newspaper_clean",
method = "lcs",
distance_col = "dist",
max_dist= 5)
temp_cw <- data.table(temp_cw)
temp_cw <- temp_cw[ , .SD[which.min(dist)], by = newspaper_clean.x]
temp_cw <- temp_cw[ , .SD[which.min(dist)], by = newspaper_clean.y]
temp_cw[, dist :=  NULL]
# for left
temp_non_matched_left <- temp[newspaper_clean %!in% temp_cw$newspaper_clean.x]
temp_duplicates_left <- temp[duplicated(newspaper_clean)]
# for right
temp_non_matched_right <- temp_right[newspaper_clean %!in% temp_cw$newspaper_clean.y]
temp_duplicates_right <- temp_right[duplicated(newspaper_clean)]
# check we have everyone on board
### should check why do we need <=
assert(dim(temp)[1]<=dim(temp_cw)[1]+dim(temp_non_matched_left)[1]+dim(temp_duplicates_left)[1])
assert(dim(temp_right)[1]<=dim(temp_cw)[1]+dim(temp_non_matched_right)[1]+dim(temp_duplicates_right)[1])
# now combine with the others
cw <- rbind(cw, temp_cw)
non_matched_left <- rbind(non_matched_left, temp_non_matched_left)
non_matched_right <- rbind(non_matched_right, temp_non_matched_right)
duplicates_right <- rbind(duplicates_right, temp_duplicates_right)
duplicates_left <- rbind(duplicates_left, temp_duplicates_left)
}
else {
print(st)
}
}
all_objects_to_return <- list(cw, non_matched_left, non_matched_right, duplicates_left, duplicates_right )
return(all_objects_to_return)
}
# 2010 - 2013 : not amazing 60% 2010 but 25% 2013
temp_object = make_crosswalk(pub_2010, pub_2013)
cw_2010_2013 = data.table(data.frame(temp_object[1]))
non_matched_2010_2013 = data.table(data.frame(temp_object[2]))
non_matched_2013_2010 = data.table(data.frame(temp_object[3]))
duplicates_2010 = data.table(data.frame(temp_object[4]))
duplicates_2013 = data.table(data.frame(temp_object[5]))
# 2013 - 2014
## (careful because this erases some database from above)
temp_object = make_crosswalk(pub_2014, pub_2013)
cw_2014_2013 = data.table(data.frame(temp_object[1]))
non_matched_2014_2013 = data.table(data.frame(temp_object[2]))
non_matched_2013_2014 = data.table(data.frame(temp_object[3]))
duplicates_2014 = data.table(data.frame(temp_object[4]))
duplicates_2013 = data.table(data.frame(temp_object[5]))
#all_duplicates = rbind(duplicates_right, duplicates_left)
colnames(cw_2010_2013) <- c("newspaper_clean_13", "newspaper_clean_10", "newspaper_10", "newspaper_st_10", "newspaper_13", "newspaper_st_13" )
non_matched_2014_2013s =non_matched_2014_2013[with(non_matched_2014_2013, order(c(newspaper_state, newspapers))),]
non_matched_2013_2014s =non_matched_2013_2014[with(non_matched_2013_2014, order(c(newspaper_state, newspapers))),]
# remove NAs
#non_matched_2014_2013  = na.omit(non_matched_2014_2013)
#diff = setdiff(non_matched_2013_2014$newspapers, non_matched_2013_2014l$newspapers) # elements in 1 not in 2
View(non_matched_2013_2014s)
non_matched_2014_2013s =non_matched_2014_2013[with(non_matched_2014_2013, order(c(newspaper_state, newspapers))),]
non_matched_2013_2014s =non_matched_2013_2014[with(non_matched_2013_2014, order(c(newspaper_state, newspapers))),]
# remove NAs
non_matched_2014_2013s  = na.omit(non_matched_2014_2013s)
#diff = setdiff(non_matched_2013_2014$newspapers, non_matched_2013_2014l$newspapers) # elements in 1 not in 2
non_matched_2014_2013 =non_matched_2014_2013[with(non_matched_2014_2013, order(c(newspaper_state, newspapers))),]
non_matched_2013_2014 =non_matched_2013_2014[with(non_matched_2013_2014, order(c(newspaper_state, newspapers))),]
# remove NAs
non_matched_2014_2013  = na.omit(non_matched_2014_2013)
non_matched_2013_2014  = na.omit(non_matched_2013_2014)
#diff = setdiff(non_matched_2013_2014$newspapers, non_matched_2013_2014l$newspapers) # elements in 1 not in 2
View(non_matched_2014_2013)
View(non_matched_2013_2014)
View(non_matched_2013_2010)
system.file("pandoc_templates", package = "postcards")
file.copy(
from = system.file("pandoc_templates", "trestles.html", package = "postcards"),
to = "trestles_custom.html",  # Copy to your working directory with a new name
overwrite = FALSE
)
# Locate the directory containing the template files
template_dir <- system.file("pandoc_templates", package = "postcards")
template_dir
# Define your working directory where the files will be copied
destination_dir <- getwd()  # This sets the destination to your current working directory
# Copy the `trestles.html` template
file.copy(
from = file.path(template_dir, "trestles.html"),
to = file.path(destination_dir, "trestles_custom.html"),
overwrite = TRUE
)
# Copy any associated CSS file if it exists
# Note: Check if there is a `trestles.css` or similar file in the template directory
css_file <- file.path(template_dir, "trestles.css")  # Example CSS file name
if (file.exists(css_file)) {
file.copy(
from = css_file,
to = file.path(destination_dir, "trestles_styles.css"),
overwrite = TRUE
)
} else {
message("No separate CSS file found in the template directory.")
}
# Locate the template file path
template_path <- system.file("pandoc_templates", "trestles.html", package = "postcards")
# Print the file path
template_path
# Define your working directory where you want to copy the file
destination_dir <- getwd()  # This sets the destination to your current working directory
# Copy the `trestles.html` file to your working directory
file.copy(
from = system.file("pandoc_templates", "trestles.html", package = "postcards"),
to = file.path(destination_dir, "trestles_custom.html"),
overwrite = TRUE
)
getwe()
getwd()
